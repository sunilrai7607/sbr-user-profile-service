buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

wrapper {
    distributionUrl = "${gradleWrapperUrl}"
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = "${group}"
version = "${version}"
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'

    /*
    * Junit dependency
    */

    testCompile 'junit:junit:4.12'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Spock framework configuration
    testCompile("org.spockframework:spock-core:${spockFrameWorkVersion}")
    testCompile("org.spockframework:spock-spring:${spockFrameWorkVersion}")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

sourceSets {
    test {
        java { srcDirs = ['src/test/unit/java'] }
        groovy { srcDirs = ['src/test/unit/groovy', 'src/test/layer/groovy'] }

    }
}

test {
    finalizedBy jacocoTestReport, jacocoTestCoverageVerification
    systemProperty 'spring.profiles.active', 'test'
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")

    }
}


